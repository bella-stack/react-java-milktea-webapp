{"ast":null,"code":"var _jsxFileName = \"/Users/wusixuan/Desktop/CSCE331/Project/project-3-902_02r/pos-webapp-frontend/src/ManagerView.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import InventoryList from './InventoryList';\n// import ManagerMenu from './ManagerMenu';\n\n// const ManagerView = () => {\n//   return (\n//     <div>\n//         <div className=\"my-4\">\n//             <h2 className=\"text-2xl font-bold flex justify-center\">MENU</h2>\n//             <div>\n//                 <ManagerMenu />\n//             </div>\n//             <h2 className=\"text-2xl font-bold flex justify-center\">INVENTORY</h2>\n//             <div className=\"\">\n//                 <InventoryList />\n//             </div>\n//         </div>\n//     </div>\n//   )\n// }\n\n// export default ManagerView\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManagerView = () => {\n  _s();\n  const [excessInventory, setExcessInventory] = useState([]);\n  useEffect(() => {\n    fetchExcessInventory();\n  }, []); // Empty dependency array to run only once on component mount\n\n  const fetchExcessInventory = async () => {\n    try {\n      const response = await fetch('/api/inventory/excess');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setExcessInventory(data);\n    } catch (error) {\n      console.error('Error fetching excess inventory:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Excess Inventory List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: excessInventory.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" - \", item.quantity]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ManagerView, \"VgMEJHxNb1kMo+5muFKp1Q9PRoM=\");\n_c = ManagerView;\nexport default ManagerView;\nvar _c;\n$RefreshReg$(_c, \"ManagerView\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ManagerView","_s","excessInventory","setExcessInventory","fetchExcessInventory","response","fetch","ok","Error","status","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","quantity","id","_c","$RefreshReg$"],"sources":["/Users/wusixuan/Desktop/CSCE331/Project/project-3-902_02r/pos-webapp-frontend/src/ManagerView.js"],"sourcesContent":["// import React from 'react'\n// import InventoryList from './InventoryList';\n// import ManagerMenu from './ManagerMenu';\n\n// const ManagerView = () => {\n//   return (\n//     <div>\n//         <div className=\"my-4\">\n//             <h2 className=\"text-2xl font-bold flex justify-center\">MENU</h2>\n//             <div>\n//                 <ManagerMenu />\n//             </div>\n//             <h2 className=\"text-2xl font-bold flex justify-center\">INVENTORY</h2>\n//             <div className=\"\">\n//                 <InventoryList />\n//             </div>\n//         </div>\n//     </div>\n//   )\n// }\n\n// export default ManagerView\nimport React, { useEffect, useState } from 'react';\n\nconst ManagerView = () => {\n    const [excessInventory, setExcessInventory] = useState([]);\n\n    useEffect(() => {\n        fetchExcessInventory();\n    }, []); // Empty dependency array to run only once on component mount\n\n    const fetchExcessInventory = async () => {\n        try {\n            const response = await fetch('/api/inventory/excess');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            setExcessInventory(data);\n        } catch (error) {\n            console.error('Error fetching excess inventory:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Excess Inventory List</h2>\n            <ul>\n                {excessInventory.map(item => (\n                    <li key={item.id}>{item.name} - {item.quantity}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ManagerView;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACZQ,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMA,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC;MACrD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC7D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCR,kBAAkB,CAACO,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BnB,OAAA;MAAAe,QAAA,EACKZ,eAAe,CAACiB,GAAG,CAACC,IAAI,iBACrBrB,OAAA;QAAAe,QAAA,GAAmBM,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACE,QAAQ;MAAA,GAArCF,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACjB,EAAA,CA9BID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}